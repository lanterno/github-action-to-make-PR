projects:
  gotee:
    name: Gotee
    categories:
      - Security
    applications:
      - Infra
    type: Library
    description: GoLang extension to allow a programmer to execute a goroutine
      within an enclave
    tech_desc: >
      Trusted Execution Environments (TEEs), such as Intel SGX enclaves, use
      hardware to ensure the confidentiality and integrity of operations on
      sensitive data. While the technology is available on many processors, the
      complexity of its programming model and its performance overhead have
      limited adoption. TEEs provide a new and valuable hardware functionality
      that has no obvious analogue in programming languages, which means that
      developers must manually partition their application into trusted and
      untrusted components. Gotee extends the Go language to allow a programmer
      to execute a goroutine within an enclave, to use low-overhead channels to
      communicate between the trusted and untrusted environments, and to rely on
      a compiler to automatically extract the secure code and data.
    code:
      type: Lab GitHub
      url: https://github.com/epfl-dcsl/gotee
      date_last_commit: 2020-09-07
    language: GoLang
    license: BSD-3-Clause
    tags:
      - Protection
      - Development
    maturity: 1
    information:
      - type: Paper
        title: "Secured Routines: Language-based Construction of Trusted Execution
          Environments"
        url: https://infoscience.epfl.ch/record/268171
        notes:
          - label: Published at
            text: USENIX ATC 2019
            url: https://www.usenix.org/conference/atc19
    date_added: 2021-11-04
    date_updated: 2024-02-20
  raft:
    name: Raft consensus protocol
    categories:
      - Blockchain
    applications:
      - Infra
    description: Implementation of the Raft consensus protocol
    layman_desc: >
      Implementation of the Raft consensus protocol. The library doesn't assume
      a network layer with ordering or duplicate detection. This means you could
      use UDP for transmission.
    code:
      type: Lab GitHub
      url: https://github.com/epfl-dcsl/raft
      date_last_commit: 2020-03-25
    language: C
    license: BSD-3-Clause
    type: Library
    tags:
      - Consensus
      - Decentralized
      - Protocol
    date_added: 2021-11-05
    date_updated: 2024-02-20
  hovercraft:
    name: HovercRaft
    categories:
      - Other
    applications:
      - Infra
    type: Experiments
    description: Improved scalable and fault-tolerant distributed architecture
    tech_desc: >
      Cloud platform services must simultaneously be scalable, meet low tail
      latency service-level objectives, and be resilient to a combination of
      software, hardware, and network failures. Replication plays a fundamental
      role in meeting both the scalability and the fault-tolerance requirement,
      but is subject to opposing requirements: (1) scalability is
      typicallyachieved by relaxing consistency; (2) fault-tolerance is
      typically achieved through the consistent replication of state machines.
      Adding nodes to a system can therefore either increase performance at the
      expense of consistency, or increase resiliency at the expense of
      performance. We propose HovercRaft, a new approach by which adding nodes
      increases both the resilience and the performance of general-purpose
      state-machine replication.
    code:
      type: Lab GitHub
      url: https://github.com/epfl-dcsl/hovercraft
      date_last_commit: 2020-03-29
    language: C, Python
    tags:
      - Consensus
      - Byzantine Resilience
      - Protocol
    information:
      - type: Paper
        title: "HovercRaft: Achieving Scalability and Fault-tolerance for
          microsecond-scale Datacenter Services"
        url: https://infoscience.epfl.ch/record/276586
        notes:
          - label: Published at
            text: EuroSys 2020
            url: https://www.eurosys2020.org/
    date_added: 2021-11-05
    date_updated: 2024-02-20
  crab:
    name: CRAB
    categories:
      - Other
    applications:
      - Infra
    type: Experiments
    description: L4 load balancer for cloud provider
    tech_desc: >
      Connection Redirect LoAd Balancer is a new scheme for L4 load balancing
      targeting specifically internal cloud workloads.
    code:
      type: Lab GitHub
      url: https://github.com/epfl-dcsl/crab
      date_last_commit: 2021-09-10
    language: C
    tags:
      - Cloud
      - Network
    information:
      - type: Paper
        title: Bypassing the load balancer without regrets
        url: https://dl.acm.org/doi/10.1145/3419111.3421304
        notes:
          - label: Published at
            text: SoCC 2020
            url: https://acmsocc.github.io/2020/
    date_added: 2022-07-04
    date_updated: 2024-02-20
